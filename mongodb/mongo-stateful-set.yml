# Versi dari API untuk konfigurasi
apiVersion: apps/v1
# Jenis dari konfigurasi: StatefulSet
kind: StatefulSet
# Informasi mengenai konfigurasi
metadata:
  name: mongo-ss
  # Menggunakan namespace karsa agar lebih mudah untuk debugging
  namespace: karsa
  # Identifier atau pelabelan saja
  labels:
    app: mongodb

# Detail spesifikasi API
spec:
  # Selector digunakan untuk identifier guna menghubungkan service
  # Selector yang ada di Deployment, harus sama dengan yang ada di Service
  selector:
    matchLabels:
      app: mongodb
      tier: backend
  # Nama dari service yang akan di populate
  serviceName: mongodb
  # Jumlah node yang akan di deploy
  replicas: 1
  # Waktu tunggu minimal sebuah pod dianggap siap
  # Jika tidak menggunakan ini, maka ketika pod jalan
  # akan langsung dianggap jalan
  minReadySeconds: 10
  # Konfigurasi pod yang akan digunakan
  template:
    # Informasi tambahan mengenai template
    metadata:
      labels:
        app: mongodb
        tier: backend
    # Spesifikasi detail container yang akan digunakan
    spec:
      # Waktu tunggu sebelum sebuah pod dihapus
      terminationGracePeriodSeconds: 10
      # Informasi container
      containers:
      # Menggunakan repository yang ada pada: default repo 
      # Jika image belum ada, maka akan di pull terlebih dahulu
      - name: mongo
        image: mongo:4.0.8
        # Identifieer port internal yang akan diekspos
        ports:
        - name: mongo
          containerPort: 27017

        # Environment variable yang akan di supply ke aplikasi
        # Menggunakan embed directory untuk menyimpan akses
        env:
        - name: MONGO_INITDB_ROOT_USERNAME_FILE
          value: /etc/mongo-credentials/MONGO_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD_FILE
          value: /etc/mongo-credentials/MONGO_ROOT_PASSWORD
        # Mount volume pada container untuk membagikan
        # konfigurasi yang akan digunakan
        volumeMounts:
        - name: mongo-pv-data
          mountPath: /data/db
        - name: mongo-config-data
          mountPath: /config
          readOnly: true
        - name: mongo-credentials
          mountPath: /etc/mongo-credentials
          readOnly: true
      # Daftar volum yang digunakan oleh pod
      volumes:
      # Membuat volume untuk menyimpan secret
      - name: mongo-credentials
        secret:
          secretName: mongo-secret
          items:
          - key: username
            path: MONGO_ROOT_USERNAME
          - key: password
            path: MONGO_ROOT_PASSWORD
      # Melakukan volume binding ke PVC
      - name: mongo-pv-data
        persistentVolumeClaim:
          claimName: mongo-pvc
      # Melakukan volume binding untuk file mongod.conf
      - name: mongo-config-data
        configMap:
          name: mongo-cm
          items:
          - key: mongod.conf
            path: mongod.conf

